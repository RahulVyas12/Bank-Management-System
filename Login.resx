<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>